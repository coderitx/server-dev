// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: cloud.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------repositoryPool--------------------------------
type RepositoryPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Identity  string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`     //identity
	Hash      string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`             //文件的唯一标识
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             //name
	Ext       string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`               //文件扩展名
	Size      int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`            //文件大小
	Path      string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`             //文件路径
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	UpdatedAt int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`  //updatedAt
	DeletedAt int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *RepositoryPool) Reset() {
	*x = RepositoryPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryPool) ProtoMessage() {}

func (x *RepositoryPool) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryPool.ProtoReflect.Descriptor instead.
func (*RepositoryPool) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{0}
}

func (x *RepositoryPool) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepositoryPool) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *RepositoryPool) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *RepositoryPool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepositoryPool) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *RepositoryPool) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RepositoryPool) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RepositoryPool) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RepositoryPool) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *RepositoryPool) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddRepositoryPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity  string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`    //identity
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`            //文件的唯一标识
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`            //name
	Ext       string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`              //文件扩展名
	Size      int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`           //文件大小
	Path      string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`            //文件路径
	CreatedAt int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,9,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *AddRepositoryPoolReq) Reset() {
	*x = AddRepositoryPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRepositoryPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRepositoryPoolReq) ProtoMessage() {}

func (x *AddRepositoryPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRepositoryPoolReq.ProtoReflect.Descriptor instead.
func (*AddRepositoryPoolReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{1}
}

func (x *AddRepositoryPoolReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AddRepositoryPoolReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *AddRepositoryPoolReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddRepositoryPoolReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *AddRepositoryPoolReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AddRepositoryPoolReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddRepositoryPoolReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddRepositoryPoolReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddRepositoryPoolReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddRepositoryPoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRepositoryPoolResp) Reset() {
	*x = AddRepositoryPoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRepositoryPoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRepositoryPoolResp) ProtoMessage() {}

func (x *AddRepositoryPoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRepositoryPoolResp.ProtoReflect.Descriptor instead.
func (*AddRepositoryPoolResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{2}
}

type UpdateRepositoryPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Identity  string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`     //identity
	Hash      string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`             //文件的唯一标识
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             //name
	Ext       string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`               //文件扩展名
	Size      int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`            //文件大小
	Path      string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`             //文件路径
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	UpdatedAt int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`  //updatedAt
	DeletedAt int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *UpdateRepositoryPoolReq) Reset() {
	*x = UpdateRepositoryPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRepositoryPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRepositoryPoolReq) ProtoMessage() {}

func (x *UpdateRepositoryPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRepositoryPoolReq.ProtoReflect.Descriptor instead.
func (*UpdateRepositoryPoolReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRepositoryPoolReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRepositoryPoolReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UpdateRepositoryPoolReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *UpdateRepositoryPoolReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRepositoryPoolReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *UpdateRepositoryPoolReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateRepositoryPoolReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateRepositoryPoolReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateRepositoryPoolReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateRepositoryPoolReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateRepositoryPoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRepositoryPoolResp) Reset() {
	*x = UpdateRepositoryPoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRepositoryPoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRepositoryPoolResp) ProtoMessage() {}

func (x *UpdateRepositoryPoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRepositoryPoolResp.ProtoReflect.Descriptor instead.
func (*UpdateRepositoryPoolResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{4}
}

type DelRepositoryPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelRepositoryPoolReq) Reset() {
	*x = DelRepositoryPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRepositoryPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRepositoryPoolReq) ProtoMessage() {}

func (x *DelRepositoryPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRepositoryPoolReq.ProtoReflect.Descriptor instead.
func (*DelRepositoryPoolReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{5}
}

func (x *DelRepositoryPoolReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelRepositoryPoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRepositoryPoolResp) Reset() {
	*x = DelRepositoryPoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRepositoryPoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRepositoryPoolResp) ProtoMessage() {}

func (x *DelRepositoryPoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRepositoryPoolResp.ProtoReflect.Descriptor instead.
func (*DelRepositoryPoolResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{6}
}

type GetRepositoryPoolByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetRepositoryPoolByIdReq) Reset() {
	*x = GetRepositoryPoolByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryPoolByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryPoolByIdReq) ProtoMessage() {}

func (x *GetRepositoryPoolByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryPoolByIdReq.ProtoReflect.Descriptor instead.
func (*GetRepositoryPoolByIdReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{7}
}

func (x *GetRepositoryPoolByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRepositoryPoolByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryPool *RepositoryPool `protobuf:"bytes,1,opt,name=repositoryPool,proto3" json:"repositoryPool,omitempty"` //repositoryPool
}

func (x *GetRepositoryPoolByIdResp) Reset() {
	*x = GetRepositoryPoolByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryPoolByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryPoolByIdResp) ProtoMessage() {}

func (x *GetRepositoryPoolByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryPoolByIdResp.ProtoReflect.Descriptor instead.
func (*GetRepositoryPoolByIdResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{8}
}

func (x *GetRepositoryPoolByIdResp) GetRepositoryPool() *RepositoryPool {
	if x != nil {
		return x.RepositoryPool
	}
	return nil
}

type SearchRepositoryPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`            //page
	Limit     int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`          //limit
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                //id
	Identity  string `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`     //identity
	Hash      string `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`             //文件的唯一标识
	Name      string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`             //name
	Ext       string `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,omitempty"`               //文件扩展名
	Size      int64  `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`            //文件大小
	Path      string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`             //文件路径
	CreatedAt int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,12,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *SearchRepositoryPoolReq) Reset() {
	*x = SearchRepositoryPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRepositoryPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRepositoryPoolReq) ProtoMessage() {}

func (x *SearchRepositoryPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRepositoryPoolReq.ProtoReflect.Descriptor instead.
func (*SearchRepositoryPoolReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRepositoryPoolReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRepositoryPoolReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRepositoryPoolReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchRepositoryPoolReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *SearchRepositoryPoolReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SearchRepositoryPoolReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchRepositoryPoolReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SearchRepositoryPoolReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchRepositoryPoolReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SearchRepositoryPoolReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchRepositoryPoolReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchRepositoryPoolReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SearchRepositoryPoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryPool []*RepositoryPool `protobuf:"bytes,1,rep,name=repositoryPool,proto3" json:"repositoryPool,omitempty"` //repositoryPool
}

func (x *SearchRepositoryPoolResp) Reset() {
	*x = SearchRepositoryPoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRepositoryPoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRepositoryPoolResp) ProtoMessage() {}

func (x *SearchRepositoryPoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRepositoryPoolResp.ProtoReflect.Descriptor instead.
func (*SearchRepositoryPoolResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{10}
}

func (x *SearchRepositoryPoolResp) GetRepositoryPool() []*RepositoryPool {
	if x != nil {
		return x.RepositoryPool
	}
	return nil
}

// --------------------------------shareBasic--------------------------------
type ShareBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        //id
	Identity               string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`                             //identity
	UserIdentity           string `protobuf:"bytes,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`                     //userIdentity
	RepositoryIdentity     string `protobuf:"bytes,4,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"`         //公共池中的唯一标识
	UserRepositoryIdentity string `protobuf:"bytes,5,opt,name=userRepositoryIdentity,proto3" json:"userRepositoryIdentity,omitempty"` //用户池子中的唯一标识
	ExpiredTime            int64  `protobuf:"varint,6,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`                      //失效时间，单位秒, 【0-永不失效】
	ClickNum               int64  `protobuf:"varint,7,opt,name=clickNum,proto3" json:"clickNum,omitempty"`                            //点击次数
	CreatedAt              int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                          //createdAt
	UpdatedAt              int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                          //updatedAt
	DeletedAt              int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                         //deletedAt
}

func (x *ShareBasic) Reset() {
	*x = ShareBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBasic) ProtoMessage() {}

func (x *ShareBasic) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBasic.ProtoReflect.Descriptor instead.
func (*ShareBasic) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{11}
}

func (x *ShareBasic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShareBasic) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *ShareBasic) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *ShareBasic) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *ShareBasic) GetUserRepositoryIdentity() string {
	if x != nil {
		return x.UserRepositoryIdentity
	}
	return ""
}

func (x *ShareBasic) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *ShareBasic) GetClickNum() int64 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *ShareBasic) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ShareBasic) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ShareBasic) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddShareBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity               string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`                             //identity
	UserIdentity           string `protobuf:"bytes,2,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`                     //userIdentity
	RepositoryIdentity     string `protobuf:"bytes,3,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"`         //公共池中的唯一标识
	UserRepositoryIdentity string `protobuf:"bytes,4,opt,name=userRepositoryIdentity,proto3" json:"userRepositoryIdentity,omitempty"` //用户池子中的唯一标识
	ExpiredTime            int64  `protobuf:"varint,5,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`                      //失效时间，单位秒, 【0-永不失效】
	ClickNum               int64  `protobuf:"varint,6,opt,name=clickNum,proto3" json:"clickNum,omitempty"`                            //点击次数
	CreatedAt              int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                          //createdAt
	UpdatedAt              int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                          //updatedAt
	DeletedAt              int64  `protobuf:"varint,9,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                          //deletedAt
}

func (x *AddShareBasicReq) Reset() {
	*x = AddShareBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShareBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShareBasicReq) ProtoMessage() {}

func (x *AddShareBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShareBasicReq.ProtoReflect.Descriptor instead.
func (*AddShareBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{12}
}

func (x *AddShareBasicReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AddShareBasicReq) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *AddShareBasicReq) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *AddShareBasicReq) GetUserRepositoryIdentity() string {
	if x != nil {
		return x.UserRepositoryIdentity
	}
	return ""
}

func (x *AddShareBasicReq) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *AddShareBasicReq) GetClickNum() int64 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *AddShareBasicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddShareBasicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddShareBasicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddShareBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddShareBasicResp) Reset() {
	*x = AddShareBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShareBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShareBasicResp) ProtoMessage() {}

func (x *AddShareBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShareBasicResp.ProtoReflect.Descriptor instead.
func (*AddShareBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{13}
}

type UpdateShareBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        //id
	Identity               string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`                             //identity
	UserIdentity           string `protobuf:"bytes,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`                     //userIdentity
	RepositoryIdentity     string `protobuf:"bytes,4,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"`         //公共池中的唯一标识
	UserRepositoryIdentity string `protobuf:"bytes,5,opt,name=userRepositoryIdentity,proto3" json:"userRepositoryIdentity,omitempty"` //用户池子中的唯一标识
	ExpiredTime            int64  `protobuf:"varint,6,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`                      //失效时间，单位秒, 【0-永不失效】
	ClickNum               int64  `protobuf:"varint,7,opt,name=clickNum,proto3" json:"clickNum,omitempty"`                            //点击次数
	CreatedAt              int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                          //createdAt
	UpdatedAt              int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                          //updatedAt
	DeletedAt              int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                         //deletedAt
}

func (x *UpdateShareBasicReq) Reset() {
	*x = UpdateShareBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShareBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShareBasicReq) ProtoMessage() {}

func (x *UpdateShareBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShareBasicReq.ProtoReflect.Descriptor instead.
func (*UpdateShareBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateShareBasicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateShareBasicReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UpdateShareBasicReq) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *UpdateShareBasicReq) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *UpdateShareBasicReq) GetUserRepositoryIdentity() string {
	if x != nil {
		return x.UserRepositoryIdentity
	}
	return ""
}

func (x *UpdateShareBasicReq) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *UpdateShareBasicReq) GetClickNum() int64 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *UpdateShareBasicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateShareBasicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateShareBasicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateShareBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateShareBasicResp) Reset() {
	*x = UpdateShareBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShareBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShareBasicResp) ProtoMessage() {}

func (x *UpdateShareBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShareBasicResp.ProtoReflect.Descriptor instead.
func (*UpdateShareBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{15}
}

type DelShareBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelShareBasicReq) Reset() {
	*x = DelShareBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelShareBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelShareBasicReq) ProtoMessage() {}

func (x *DelShareBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelShareBasicReq.ProtoReflect.Descriptor instead.
func (*DelShareBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{16}
}

func (x *DelShareBasicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelShareBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelShareBasicResp) Reset() {
	*x = DelShareBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelShareBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelShareBasicResp) ProtoMessage() {}

func (x *DelShareBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelShareBasicResp.ProtoReflect.Descriptor instead.
func (*DelShareBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{17}
}

type GetShareBasicByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetShareBasicByIdReq) Reset() {
	*x = GetShareBasicByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareBasicByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareBasicByIdReq) ProtoMessage() {}

func (x *GetShareBasicByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareBasicByIdReq.ProtoReflect.Descriptor instead.
func (*GetShareBasicByIdReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{18}
}

func (x *GetShareBasicByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetShareBasicByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareBasic *ShareBasic `protobuf:"bytes,1,opt,name=shareBasic,proto3" json:"shareBasic,omitempty"` //shareBasic
}

func (x *GetShareBasicByIdResp) Reset() {
	*x = GetShareBasicByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareBasicByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareBasicByIdResp) ProtoMessage() {}

func (x *GetShareBasicByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareBasicByIdResp.ProtoReflect.Descriptor instead.
func (*GetShareBasicByIdResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{19}
}

func (x *GetShareBasicByIdResp) GetShareBasic() *ShareBasic {
	if x != nil {
		return x.ShareBasic
	}
	return nil
}

type SearchShareBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page                   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                    //page
	Limit                  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                                  //limit
	Id                     int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                        //id
	Identity               string `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`                             //identity
	UserIdentity           string `protobuf:"bytes,5,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`                     //userIdentity
	RepositoryIdentity     string `protobuf:"bytes,6,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"`         //公共池中的唯一标识
	UserRepositoryIdentity string `protobuf:"bytes,7,opt,name=userRepositoryIdentity,proto3" json:"userRepositoryIdentity,omitempty"` //用户池子中的唯一标识
	ExpiredTime            int64  `protobuf:"varint,8,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`                      //失效时间，单位秒, 【0-永不失效】
	ClickNum               int64  `protobuf:"varint,9,opt,name=clickNum,proto3" json:"clickNum,omitempty"`                            //点击次数
	CreatedAt              int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                         //createdAt
	UpdatedAt              int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                         //updatedAt
	DeletedAt              int64  `protobuf:"varint,12,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                         //deletedAt
}

func (x *SearchShareBasicReq) Reset() {
	*x = SearchShareBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchShareBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchShareBasicReq) ProtoMessage() {}

func (x *SearchShareBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchShareBasicReq.ProtoReflect.Descriptor instead.
func (*SearchShareBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{20}
}

func (x *SearchShareBasicReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchShareBasicReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchShareBasicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchShareBasicReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *SearchShareBasicReq) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *SearchShareBasicReq) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *SearchShareBasicReq) GetUserRepositoryIdentity() string {
	if x != nil {
		return x.UserRepositoryIdentity
	}
	return ""
}

func (x *SearchShareBasicReq) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *SearchShareBasicReq) GetClickNum() int64 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *SearchShareBasicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchShareBasicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchShareBasicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SearchShareBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareBasic []*ShareBasic `protobuf:"bytes,1,rep,name=shareBasic,proto3" json:"shareBasic,omitempty"` //shareBasic
}

func (x *SearchShareBasicResp) Reset() {
	*x = SearchShareBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchShareBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchShareBasicResp) ProtoMessage() {}

func (x *SearchShareBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchShareBasicResp.ProtoReflect.Descriptor instead.
func (*SearchShareBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{21}
}

func (x *SearchShareBasicResp) GetShareBasic() []*ShareBasic {
	if x != nil {
		return x.ShareBasic
	}
	return nil
}

// --------------------------------userBasic--------------------------------
type UserBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	Identity  string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`    //identity
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`            //name
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`    //password
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`          //email
	CreatedAt int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,8,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *UserBasic) Reset() {
	*x = UserBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBasic) ProtoMessage() {}

func (x *UserBasic) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBasic.ProtoReflect.Descriptor instead.
func (*UserBasic) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{22}
}

func (x *UserBasic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserBasic) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UserBasic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserBasic) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserBasic) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserBasic) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserBasic) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserBasic) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddUserBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity  string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`    //identity
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`            //name
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`    //password
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`          //email
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,7,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *AddUserBasicReq) Reset() {
	*x = AddUserBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserBasicReq) ProtoMessage() {}

func (x *AddUserBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserBasicReq.ProtoReflect.Descriptor instead.
func (*AddUserBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{23}
}

func (x *AddUserBasicReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AddUserBasicReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUserBasicReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserBasicReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserBasicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddUserBasicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddUserBasicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddUserBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserBasicResp) Reset() {
	*x = AddUserBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserBasicResp) ProtoMessage() {}

func (x *AddUserBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserBasicResp.ProtoReflect.Descriptor instead.
func (*AddUserBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{24}
}

type UpdateUserBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	Identity  string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`    //identity
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`            //name
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`    //password
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`          //email
	CreatedAt int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,8,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *UpdateUserBasicReq) Reset() {
	*x = UpdateUserBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserBasicReq) ProtoMessage() {}

func (x *UpdateUserBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserBasicReq.ProtoReflect.Descriptor instead.
func (*UpdateUserBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateUserBasicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserBasicReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UpdateUserBasicReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserBasicReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserBasicReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserBasicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateUserBasicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateUserBasicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateUserBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserBasicResp) Reset() {
	*x = UpdateUserBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserBasicResp) ProtoMessage() {}

func (x *UpdateUserBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserBasicResp.ProtoReflect.Descriptor instead.
func (*UpdateUserBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{26}
}

type DelUserBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelUserBasicReq) Reset() {
	*x = DelUserBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserBasicReq) ProtoMessage() {}

func (x *DelUserBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserBasicReq.ProtoReflect.Descriptor instead.
func (*DelUserBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{27}
}

func (x *DelUserBasicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelUserBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelUserBasicResp) Reset() {
	*x = DelUserBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserBasicResp) ProtoMessage() {}

func (x *DelUserBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserBasicResp.ProtoReflect.Descriptor instead.
func (*DelUserBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{28}
}

type GetUserBasicByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetUserBasicByIdReq) Reset() {
	*x = GetUserBasicByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBasicByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBasicByIdReq) ProtoMessage() {}

func (x *GetUserBasicByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBasicByIdReq.ProtoReflect.Descriptor instead.
func (*GetUserBasicByIdReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserBasicByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserBasicByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBasic *UserBasic `protobuf:"bytes,1,opt,name=userBasic,proto3" json:"userBasic,omitempty"` //userBasic
}

func (x *GetUserBasicByIdResp) Reset() {
	*x = GetUserBasicByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBasicByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBasicByIdResp) ProtoMessage() {}

func (x *GetUserBasicByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBasicByIdResp.ProtoReflect.Descriptor instead.
func (*GetUserBasicByIdResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserBasicByIdResp) GetUserBasic() *UserBasic {
	if x != nil {
		return x.UserBasic
	}
	return nil
}

type SearchUserBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`            //page
	Limit     int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`          //limit
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                //id
	Identity  string `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`     //identity
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`             //name
	Password  string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`     //password
	Email     string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`           //email
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	UpdatedAt int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`  //updatedAt
	DeletedAt int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *SearchUserBasicReq) Reset() {
	*x = SearchUserBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserBasicReq) ProtoMessage() {}

func (x *SearchUserBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserBasicReq.ProtoReflect.Descriptor instead.
func (*SearchUserBasicReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{31}
}

func (x *SearchUserBasicReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchUserBasicReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchUserBasicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchUserBasicReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *SearchUserBasicReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchUserBasicReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SearchUserBasicReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SearchUserBasicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchUserBasicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchUserBasicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SearchUserBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBasic []*UserBasic `protobuf:"bytes,1,rep,name=userBasic,proto3" json:"userBasic,omitempty"` //userBasic
}

func (x *SearchUserBasicResp) Reset() {
	*x = SearchUserBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserBasicResp) ProtoMessage() {}

func (x *SearchUserBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserBasicResp.ProtoReflect.Descriptor instead.
func (*SearchUserBasicResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{32}
}

func (x *SearchUserBasicResp) GetUserBasic() []*UserBasic {
	if x != nil {
		return x.UserBasic
	}
	return nil
}

// --------------------------------userRepository--------------------------------
type UserRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //id
	Identity           string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`                     //identity
	UserIdentity       string `protobuf:"bytes,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`             //userIdentity
	ParentId           int64  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`                    //parentId
	RepositoryIdentity string `protobuf:"bytes,5,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"` //repositoryIdentity
	Ext                string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`                               //文件或文件夹类型
	Name               string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                             //name
	CreatedAt          int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                  //createdAt
	UpdatedAt          int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                  //updatedAt
	DeletedAt          int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                 //deletedAt
}

func (x *UserRepository) Reset() {
	*x = UserRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRepository) ProtoMessage() {}

func (x *UserRepository) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRepository.ProtoReflect.Descriptor instead.
func (*UserRepository) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{33}
}

func (x *UserRepository) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRepository) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UserRepository) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *UserRepository) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UserRepository) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *UserRepository) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *UserRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRepository) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserRepository) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserRepository) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddUserRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity           string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`                     //identity
	UserIdentity       string `protobuf:"bytes,2,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`             //userIdentity
	ParentId           int64  `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`                    //parentId
	RepositoryIdentity string `protobuf:"bytes,4,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"` //repositoryIdentity
	Ext                string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`                               //文件或文件夹类型
	Name               string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                             //name
	CreatedAt          int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                  //createdAt
	UpdatedAt          int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                  //updatedAt
	DeletedAt          int64  `protobuf:"varint,9,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                  //deletedAt
}

func (x *AddUserRepositoryReq) Reset() {
	*x = AddUserRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRepositoryReq) ProtoMessage() {}

func (x *AddUserRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRepositoryReq.ProtoReflect.Descriptor instead.
func (*AddUserRepositoryReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{34}
}

func (x *AddUserRepositoryReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AddUserRepositoryReq) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *AddUserRepositoryReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddUserRepositoryReq) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *AddUserRepositoryReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *AddUserRepositoryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUserRepositoryReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddUserRepositoryReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddUserRepositoryReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddUserRepositoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserRepositoryResp) Reset() {
	*x = AddUserRepositoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRepositoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRepositoryResp) ProtoMessage() {}

func (x *AddUserRepositoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRepositoryResp.ProtoReflect.Descriptor instead.
func (*AddUserRepositoryResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{35}
}

type UpdateUserRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //id
	Identity           string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`                     //identity
	UserIdentity       string `protobuf:"bytes,3,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`             //userIdentity
	ParentId           int64  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`                    //parentId
	RepositoryIdentity string `protobuf:"bytes,5,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"` //repositoryIdentity
	Ext                string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`                               //文件或文件夹类型
	Name               string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                             //name
	CreatedAt          int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                  //createdAt
	UpdatedAt          int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                  //updatedAt
	DeletedAt          int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                 //deletedAt
}

func (x *UpdateUserRepositoryReq) Reset() {
	*x = UpdateUserRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRepositoryReq) ProtoMessage() {}

func (x *UpdateUserRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRepositoryReq.ProtoReflect.Descriptor instead.
func (*UpdateUserRepositoryReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateUserRepositoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRepositoryReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *UpdateUserRepositoryReq) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *UpdateUserRepositoryReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateUserRepositoryReq) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *UpdateUserRepositoryReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *UpdateUserRepositoryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserRepositoryReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateUserRepositoryReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateUserRepositoryReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateUserRepositoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserRepositoryResp) Reset() {
	*x = UpdateUserRepositoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRepositoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRepositoryResp) ProtoMessage() {}

func (x *UpdateUserRepositoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRepositoryResp.ProtoReflect.Descriptor instead.
func (*UpdateUserRepositoryResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{37}
}

type DelUserRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelUserRepositoryReq) Reset() {
	*x = DelUserRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserRepositoryReq) ProtoMessage() {}

func (x *DelUserRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserRepositoryReq.ProtoReflect.Descriptor instead.
func (*DelUserRepositoryReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{38}
}

func (x *DelUserRepositoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelUserRepositoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelUserRepositoryResp) Reset() {
	*x = DelUserRepositoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserRepositoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserRepositoryResp) ProtoMessage() {}

func (x *DelUserRepositoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserRepositoryResp.ProtoReflect.Descriptor instead.
func (*DelUserRepositoryResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{39}
}

type GetUserRepositoryByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetUserRepositoryByIdReq) Reset() {
	*x = GetUserRepositoryByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRepositoryByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRepositoryByIdReq) ProtoMessage() {}

func (x *GetUserRepositoryByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRepositoryByIdReq.ProtoReflect.Descriptor instead.
func (*GetUserRepositoryByIdReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{40}
}

func (x *GetUserRepositoryByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserRepositoryByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRepository *UserRepository `protobuf:"bytes,1,opt,name=userRepository,proto3" json:"userRepository,omitempty"` //userRepository
}

func (x *GetUserRepositoryByIdResp) Reset() {
	*x = GetUserRepositoryByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRepositoryByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRepositoryByIdResp) ProtoMessage() {}

func (x *GetUserRepositoryByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRepositoryByIdResp.ProtoReflect.Descriptor instead.
func (*GetUserRepositoryByIdResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{41}
}

func (x *GetUserRepositoryByIdResp) GetUserRepository() *UserRepository {
	if x != nil {
		return x.UserRepository
	}
	return nil
}

type SearchUserRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page               int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                            //page
	Limit              int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                          //limit
	Id                 int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                //id
	Identity           string `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`                     //identity
	UserIdentity       string `protobuf:"bytes,5,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`             //userIdentity
	ParentId           int64  `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId,omitempty"`                    //parentId
	RepositoryIdentity string `protobuf:"bytes,7,opt,name=repositoryIdentity,proto3" json:"repositoryIdentity,omitempty"` //repositoryIdentity
	Ext                string `protobuf:"bytes,8,opt,name=ext,proto3" json:"ext,omitempty"`                               //文件或文件夹类型
	Name               string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`                             //name
	CreatedAt          int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                 //createdAt
	UpdatedAt          int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                 //updatedAt
	DeletedAt          int64  `protobuf:"varint,12,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`                 //deletedAt
}

func (x *SearchUserRepositoryReq) Reset() {
	*x = SearchUserRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserRepositoryReq) ProtoMessage() {}

func (x *SearchUserRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserRepositoryReq.ProtoReflect.Descriptor instead.
func (*SearchUserRepositoryReq) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{42}
}

func (x *SearchUserRepositoryReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchUserRepositoryReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchUserRepositoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchUserRepositoryReq) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *SearchUserRepositoryReq) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *SearchUserRepositoryReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SearchUserRepositoryReq) GetRepositoryIdentity() string {
	if x != nil {
		return x.RepositoryIdentity
	}
	return ""
}

func (x *SearchUserRepositoryReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SearchUserRepositoryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchUserRepositoryReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchUserRepositoryReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchUserRepositoryReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SearchUserRepositoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRepository []*UserRepository `protobuf:"bytes,1,rep,name=userRepository,proto3" json:"userRepository,omitempty"` //userRepository
}

func (x *SearchUserRepositoryResp) Reset() {
	*x = SearchUserRepositoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_disk_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserRepositoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserRepositoryResp) ProtoMessage() {}

func (x *SearchUserRepositoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_disk_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserRepositoryResp.ProtoReflect.Descriptor instead.
func (*SearchUserRepositoryResp) Descriptor() ([]byte, []int) {
	return file_cloud_disk_proto_rawDescGZIP(), []int{43}
}

func (x *SearchUserRepositoryResp) GetUserRepository() []*UserRepository {
	if x != nil {
		return x.UserRepository
	}
	return nil
}

var File_cloud_disk_proto protoreflect.FileDescriptor

var file_cloud_disk_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x64, 0x69, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x81, 0x02, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f,
	0x6c, 0x22, 0xab, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x56, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x22, 0xdc, 0x02, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd2, 0x02, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xe5, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x22, 0x8f, 0x03, 0x0a, 0x13, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a, 0x14,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x22, 0xd7, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcd,
	0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x12,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xe0, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x22,
	0x8a, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x22, 0xac, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xa2, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb5, 0x02,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x18, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x32, 0xc7, 0x0b, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x48, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x51, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_disk_proto_rawDescOnce sync.Once
	file_cloud_disk_proto_rawDescData = file_cloud_disk_proto_rawDesc
)

func file_cloud_disk_proto_rawDescGZIP() []byte {
	file_cloud_disk_proto_rawDescOnce.Do(func() {
		file_cloud_disk_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_disk_proto_rawDescData)
	})
	return file_cloud_disk_proto_rawDescData
}

var file_cloud_disk_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_cloud_disk_proto_goTypes = []interface{}{
	(*RepositoryPool)(nil),            // 0: pb.RepositoryPool
	(*AddRepositoryPoolReq)(nil),      // 1: pb.AddRepositoryPoolReq
	(*AddRepositoryPoolResp)(nil),     // 2: pb.AddRepositoryPoolResp
	(*UpdateRepositoryPoolReq)(nil),   // 3: pb.UpdateRepositoryPoolReq
	(*UpdateRepositoryPoolResp)(nil),  // 4: pb.UpdateRepositoryPoolResp
	(*DelRepositoryPoolReq)(nil),      // 5: pb.DelRepositoryPoolReq
	(*DelRepositoryPoolResp)(nil),     // 6: pb.DelRepositoryPoolResp
	(*GetRepositoryPoolByIdReq)(nil),  // 7: pb.GetRepositoryPoolByIdReq
	(*GetRepositoryPoolByIdResp)(nil), // 8: pb.GetRepositoryPoolByIdResp
	(*SearchRepositoryPoolReq)(nil),   // 9: pb.SearchRepositoryPoolReq
	(*SearchRepositoryPoolResp)(nil),  // 10: pb.SearchRepositoryPoolResp
	(*ShareBasic)(nil),                // 11: pb.ShareBasic
	(*AddShareBasicReq)(nil),          // 12: pb.AddShareBasicReq
	(*AddShareBasicResp)(nil),         // 13: pb.AddShareBasicResp
	(*UpdateShareBasicReq)(nil),       // 14: pb.UpdateShareBasicReq
	(*UpdateShareBasicResp)(nil),      // 15: pb.UpdateShareBasicResp
	(*DelShareBasicReq)(nil),          // 16: pb.DelShareBasicReq
	(*DelShareBasicResp)(nil),         // 17: pb.DelShareBasicResp
	(*GetShareBasicByIdReq)(nil),      // 18: pb.GetShareBasicByIdReq
	(*GetShareBasicByIdResp)(nil),     // 19: pb.GetShareBasicByIdResp
	(*SearchShareBasicReq)(nil),       // 20: pb.SearchShareBasicReq
	(*SearchShareBasicResp)(nil),      // 21: pb.SearchShareBasicResp
	(*UserBasic)(nil),                 // 22: pb.UserBasic
	(*AddUserBasicReq)(nil),           // 23: pb.AddUserBasicReq
	(*AddUserBasicResp)(nil),          // 24: pb.AddUserBasicResp
	(*UpdateUserBasicReq)(nil),        // 25: pb.UpdateUserBasicReq
	(*UpdateUserBasicResp)(nil),       // 26: pb.UpdateUserBasicResp
	(*DelUserBasicReq)(nil),           // 27: pb.DelUserBasicReq
	(*DelUserBasicResp)(nil),          // 28: pb.DelUserBasicResp
	(*GetUserBasicByIdReq)(nil),       // 29: pb.GetUserBasicByIdReq
	(*GetUserBasicByIdResp)(nil),      // 30: pb.GetUserBasicByIdResp
	(*SearchUserBasicReq)(nil),        // 31: pb.SearchUserBasicReq
	(*SearchUserBasicResp)(nil),       // 32: pb.SearchUserBasicResp
	(*UserRepository)(nil),            // 33: pb.UserRepository
	(*AddUserRepositoryReq)(nil),      // 34: pb.AddUserRepositoryReq
	(*AddUserRepositoryResp)(nil),     // 35: pb.AddUserRepositoryResp
	(*UpdateUserRepositoryReq)(nil),   // 36: pb.UpdateUserRepositoryReq
	(*UpdateUserRepositoryResp)(nil),  // 37: pb.UpdateUserRepositoryResp
	(*DelUserRepositoryReq)(nil),      // 38: pb.DelUserRepositoryReq
	(*DelUserRepositoryResp)(nil),     // 39: pb.DelUserRepositoryResp
	(*GetUserRepositoryByIdReq)(nil),  // 40: pb.GetUserRepositoryByIdReq
	(*GetUserRepositoryByIdResp)(nil), // 41: pb.GetUserRepositoryByIdResp
	(*SearchUserRepositoryReq)(nil),   // 42: pb.SearchUserRepositoryReq
	(*SearchUserRepositoryResp)(nil),  // 43: pb.SearchUserRepositoryResp
}
var file_cloud_disk_proto_depIdxs = []int32{
	0,  // 0: pb.GetRepositoryPoolByIdResp.repositoryPool:type_name -> pb.RepositoryPool
	0,  // 1: pb.SearchRepositoryPoolResp.repositoryPool:type_name -> pb.RepositoryPool
	11, // 2: pb.GetShareBasicByIdResp.shareBasic:type_name -> pb.ShareBasic
	11, // 3: pb.SearchShareBasicResp.shareBasic:type_name -> pb.ShareBasic
	22, // 4: pb.GetUserBasicByIdResp.userBasic:type_name -> pb.UserBasic
	22, // 5: pb.SearchUserBasicResp.userBasic:type_name -> pb.UserBasic
	33, // 6: pb.GetUserRepositoryByIdResp.userRepository:type_name -> pb.UserRepository
	33, // 7: pb.SearchUserRepositoryResp.userRepository:type_name -> pb.UserRepository
	1,  // 8: pb.CloudService.AddRepositoryPool:input_type -> pb.AddRepositoryPoolReq
	3,  // 9: pb.CloudService.UpdateRepositoryPool:input_type -> pb.UpdateRepositoryPoolReq
	5,  // 10: pb.CloudService.DelRepositoryPool:input_type -> pb.DelRepositoryPoolReq
	7,  // 11: pb.CloudService.GetRepositoryPoolById:input_type -> pb.GetRepositoryPoolByIdReq
	9,  // 12: pb.CloudService.SearchRepositoryPool:input_type -> pb.SearchRepositoryPoolReq
	12, // 13: pb.CloudService.AddShareBasic:input_type -> pb.AddShareBasicReq
	14, // 14: pb.CloudService.UpdateShareBasic:input_type -> pb.UpdateShareBasicReq
	16, // 15: pb.CloudService.DelShareBasic:input_type -> pb.DelShareBasicReq
	18, // 16: pb.CloudService.GetShareBasicById:input_type -> pb.GetShareBasicByIdReq
	20, // 17: pb.CloudService.SearchShareBasic:input_type -> pb.SearchShareBasicReq
	23, // 18: pb.CloudService.AddUserBasic:input_type -> pb.AddUserBasicReq
	25, // 19: pb.CloudService.UpdateUserBasic:input_type -> pb.UpdateUserBasicReq
	27, // 20: pb.CloudService.DelUserBasic:input_type -> pb.DelUserBasicReq
	29, // 21: pb.CloudService.GetUserBasicById:input_type -> pb.GetUserBasicByIdReq
	31, // 22: pb.CloudService.SearchUserBasic:input_type -> pb.SearchUserBasicReq
	34, // 23: pb.CloudService.AddUserRepository:input_type -> pb.AddUserRepositoryReq
	36, // 24: pb.CloudService.UpdateUserRepository:input_type -> pb.UpdateUserRepositoryReq
	38, // 25: pb.CloudService.DelUserRepository:input_type -> pb.DelUserRepositoryReq
	40, // 26: pb.CloudService.GetUserRepositoryById:input_type -> pb.GetUserRepositoryByIdReq
	42, // 27: pb.CloudService.SearchUserRepository:input_type -> pb.SearchUserRepositoryReq
	2,  // 28: pb.CloudService.AddRepositoryPool:output_type -> pb.AddRepositoryPoolResp
	4,  // 29: pb.CloudService.UpdateRepositoryPool:output_type -> pb.UpdateRepositoryPoolResp
	6,  // 30: pb.CloudService.DelRepositoryPool:output_type -> pb.DelRepositoryPoolResp
	8,  // 31: pb.CloudService.GetRepositoryPoolById:output_type -> pb.GetRepositoryPoolByIdResp
	10, // 32: pb.CloudService.SearchRepositoryPool:output_type -> pb.SearchRepositoryPoolResp
	13, // 33: pb.CloudService.AddShareBasic:output_type -> pb.AddShareBasicResp
	15, // 34: pb.CloudService.UpdateShareBasic:output_type -> pb.UpdateShareBasicResp
	17, // 35: pb.CloudService.DelShareBasic:output_type -> pb.DelShareBasicResp
	19, // 36: pb.CloudService.GetShareBasicById:output_type -> pb.GetShareBasicByIdResp
	21, // 37: pb.CloudService.SearchShareBasic:output_type -> pb.SearchShareBasicResp
	24, // 38: pb.CloudService.AddUserBasic:output_type -> pb.AddUserBasicResp
	26, // 39: pb.CloudService.UpdateUserBasic:output_type -> pb.UpdateUserBasicResp
	28, // 40: pb.CloudService.DelUserBasic:output_type -> pb.DelUserBasicResp
	30, // 41: pb.CloudService.GetUserBasicById:output_type -> pb.GetUserBasicByIdResp
	32, // 42: pb.CloudService.SearchUserBasic:output_type -> pb.SearchUserBasicResp
	35, // 43: pb.CloudService.AddUserRepository:output_type -> pb.AddUserRepositoryResp
	37, // 44: pb.CloudService.UpdateUserRepository:output_type -> pb.UpdateUserRepositoryResp
	39, // 45: pb.CloudService.DelUserRepository:output_type -> pb.DelUserRepositoryResp
	41, // 46: pb.CloudService.GetUserRepositoryById:output_type -> pb.GetUserRepositoryByIdResp
	43, // 47: pb.CloudService.SearchUserRepository:output_type -> pb.SearchUserRepositoryResp
	28, // [28:48] is the sub-list for method output_type
	8,  // [8:28] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_cloud_disk_proto_init() }
func file_cloud_disk_proto_init() {
	if File_cloud_disk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_disk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRepositoryPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRepositoryPoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRepositoryPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRepositoryPoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRepositoryPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRepositoryPoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryPoolByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryPoolByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRepositoryPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRepositoryPoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShareBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShareBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShareBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShareBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelShareBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelShareBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareBasicByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareBasicByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchShareBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchShareBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBasicByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBasicByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRepositoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRepositoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserRepositoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRepositoryByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRepositoryByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_disk_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserRepositoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_disk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloud_disk_proto_goTypes,
		DependencyIndexes: file_cloud_disk_proto_depIdxs,
		MessageInfos:      file_cloud_disk_proto_msgTypes,
	}.Build()
	File_cloud_disk_proto = out.File
	file_cloud_disk_proto_rawDesc = nil
	file_cloud_disk_proto_goTypes = nil
	file_cloud_disk_proto_depIdxs = nil
}
